{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red246\green246\blue246;}
{\*\expandedcolortbl;;\cssrgb\c13333\c13333\c13333;\cssrgb\c97255\c97255\c97255;}
\margl1440\margr1440\vieww16980\viewh13980\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Create 2 different pods and allow the client have access to the server. When the client sends a request to the server, bring back a \'93Welcome to NGINX\'94 text.
\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\
\
\
\
\
https://kubernetes.io/docs/tutorials/services/connect-applications-service/\
Exposing pods to the cluster & part of creating a service\
\
1. kind create cluster\
2. kubectl apply -f ./run-my-nginx.yaml\
3. kind load docker-image nginx:latest\
4. kubectl get pods -l run=my-nginx -o wide\
5. kubectl get pods -l run=my-nginx -o custom-columns=POD_IP:.status.podIPs\
6. kubectl expose deployment/my-nginx\
7. kubectl get svc my-nginx\
8. kubectl describe svc my-nginx\
9. kubectl get endpointslices -l kubernetes.io/service-name=my-nginx\
10. kubectl get services kube-dns --namespace=kube-system\
11. docker pull busybox:latest\
12. kubectl apply -f mycurlpod.yaml\
13. kind load docker-image busybox:latest\
14. kubectl exec -it busy sh\
15. # wget 10.96.4.252:80 ** wget <IP from part 8 for example>:<PORT>\
16.# cat index.html\
17.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 {{\NeXTGraphic Screenshot 2023-03-20 at 5.48.41 PM.png \width13000 \height8540 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\
\
kind create cluster\
kubectl apply -f ./run-my-nginx.yaml\
kind load docker-image nginx:latest\
kubectl get pods -l run=my-nginx -o wide\
kubectl get pods -l run=my-nginx -o custom-columns=POD_IP:.status.podIPs\
kubectl expose deployment/my-nginx\
kubectl get svc my-nginx\
kubectl describe svc my-nginx\
kubectl get endpointslices -l kubernetes.io/service-name=my-nginx\
kubectl get services kube-dns --namespace=kube-system\
docker pull busybox:latest\
kubectl apply -f mycurlpod.yaml\
kind load docker-image busybox:latest\
kubectl exec -it busy sh}