{\rtf1\ansi\ansicpg1252\cocoartf2707
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww28300\viewh14700\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 In this week, the main big focus was to watch the 2 videos and understand them : https://www.youtube.com/watch?v=sK5i-N34im8 , https://www.youtube.com/watch?v=3KtEAa7_duA\
\
I also had to do extra task which was minor. I was simply tasked to create 2 pods (took a few hours of effort because of linux errors that I didn\'92t understand how to solve at the time -> IMAGE PULL BACK ERROR AGAAAAAAIIINNNNNNNNN). There will be 1 container in each pod and all I need to do is to just 
\f1\b check - show evidence - 
\f0\b0  if I can touch the pods can touch each other (LISA video & connecting pods link).\
\
\
Is the API server within our local machine?\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-02-23 at 4.01.14 PM.png \width18460 \height10560 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
- kubectl generates a manifest describing a deployment and 
\f1\b connects to API server
\f0\b0  \
- Devops connects to control plane\'92s API server and the API server talks with its connected processes/applications to create pods and give it to the kubelet worker nodes\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-02-23 at 3.57.42 PM.png \width18560 \height10500 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\
\
1. kind create cluster\
2. kubectl apply -f mutli2.yaml\
3. kubectl apply -f nginx.yaml\
4. kind load docker-image nginx:latest\
5. kind load docker-image alpine:latest\
6. kubectl get pods -o wide **look at the IPs of each pod and their names**\
7. kubectl exec -it <POD NAME A> sh
\f1\b \

\f0\b0 8. ping <IP B> ***This checks if pod B can be touched by pod A***\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-02-20 at 11.50.56 AM.png \width26060 \height4840 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-02-23 at 3.32.17 PM.png \width14340 \height11340 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.redhat.com/sysadmin/kubernetes-pods-communicate-nodes"}}{\fldrslt \cf0 https://www.redhat.com/sysadmin/kubernetes-pods-communicate-nodes}} -> The picture above \'93Communication on the wire\'94 is from this website. This showcases that these 2 containers have access to each other through ping!!\
\
}